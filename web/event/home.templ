package web_event

import (
"fmt"

"scouts-risk/internal/fixtures"
"scouts-risk/internal/model"
"scouts-risk/internal/ui"

"github.com/labstack/echo/v4"
)

templ Home(c echo.Context) {
@Events() {
if (c.QueryParam("success") != "") {
@ui.Toast(map[string]string{
"success": "Successfully created risk assessment",
})
}
<div class="px-4">
  @ui.HeadingHelp(model.HeadingHelp{
  Label: "Events",
  Level: 1,
  Help: "Events are our bread and butter, even a regular Scout meeting is an event.",
  })
  @ui.Button[model.UiColourDefault](templ.Attributes{
  "x-on:click": "window.open('/risk/event/new', '_self')",
  }){
  Add event
  }
</div>
@ui.ActionList(prepareActionList())
}
}

func prepareActionList() model.ActionList {
return model.ActionList{
Id: "events",
Actions: map[model.ActionListAction]string{
model.ActionListActionEdit: "/risk/event/register",
model.ActionListActionDuplicate: "/cool",
},
Links: prepareActionListLinks([]model.Event{
fixtures.Events["campAtMacs"],
}),
}
}

func prepareActionListLinks(events []model.Event) []model.ActionListLink {
actionListLinks := []model.ActionListLink{}
for _, event := range events {
actionListLinks = append(actionListLinks, model.ActionListLink{
LinkTitle: fmt.Sprintf("%s %s", event.Date.Format("2006-01-02"), event.Label),
LinkHref: "/risk/event/register",
})
}
return actionListLinks
}