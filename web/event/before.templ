package web_event

import (
"scouts-risk/web/location"
"scouts-risk/web/activity"
"scouts-risk/internal/fixtures"
"scouts-risk/internal/ui"
"scouts-risk/internal/model"
"scouts-risk/internal/ui/register"
"scouts-risk/web/hazard"
)

templ Before() {
@Events() {
<div x-data="initRegister()">
  @web_hazard.NewModals()
  @EventDescription(fixtures.Events["campAtMacs"])
  <div class="px-4">
    @ui.HeadingHelp(model.HeadingHelp{
    Label: "Prepare thyself",
    Level: 2,
    Help: "This risk register has been submitted. Now all you need to do is prepare! Use the shortcuts below to help." +
    " HOWEVER, If you would like to re-open this register, you can edit below" +
    " as normal and re-submit for review.",
    })
    @ui.HeadingHelp(model.HeadingHelp{
    Label: "Shortcuts",
    Level: 3,
    Help: "Here are some quick links to help you in the lead-up to your event.",
    })
  </div>
  @beforeShortcuts()
  <div class="px-4">
    @ui.HeadingHelp(model.HeadingHelp{
    Label: "Review assessment",
    Level: 2,
    Help: "Does anything need to be altered? Make changes, and submit again below.",
    })
    @ui.HeadingHelp(model.HeadingHelp{
    Label: "Location",
    Level: 3,
    Help: "Add equipment/areas that will be used while at this location. Then add/review hazards and controls" +
    " for each.",
    })
  </div>
  @web_location.ReviewLocations(fixtures.LocationsExample)
  <div class="px-4">
    @ui.HeadingHelp(model.HeadingHelp{
    Label: "Activities",
    Level: 3,
    Help: "Add activities for this event; formal i.e. scheduled, and informal i.e. may occur while at this location." +
    " Then add/review hazards and controls for each.",
    })
  </div>
  @web_activity.ReviewActivities(fixtures.ActivitiesFormal)
  @ui_register.Actions("event")
</div>
}
}

templ beforeShortcuts() {
<div class="join join-vertical w-full">
  @ui.AccordionRow(
  model.Accordion{
  Label: "Tasks before the event",
  Description: "This is the list of controls/tasks defined to be completed before the event. " +
  " For now, it's a quick list someone can use to tick things off. In future iterations " +
  " we could assign responsibilities and due dates.",
  GroupId: "shortcuts",
  Icon: model.AccordionIconArrow,
  Border: true,
  Multi: true,
  },
  ) {
  <div class="list-none list-outside divide-y divide-solid">
    for _, location := range fixtures.LocationsExample {
    <div>
      @ui.Heading[4](templ.Attributes{}){{ location.Label }}
      <div class="divide-y divide-dashed">
        for _, hazard := range location.Hazards {
        <div class="c-contains-list">
          @ui.Heading[5](templ.Attributes{}){{ hazard.Label }}
          <ul class="list-none list-outside c-list-tight mt-0">
            for _, control := range hazard.Controls {
            if (control.When == model.ControlWhenBefore) {
            <li class="flex flex-nowrap gap-1 items-center">
              <div class="flex-none w-fit">
                @ui.Checkbox(model.Checkbox{
                Label: "",
                Name: control.Id,
                })
              </div>
              <div class="grow">
                { control.Label }
              </div>
            </li>
            }
            }
          </ul>
        </div>
        }
      </div>
    </div>
    }
  </div>
  <p><span class="font-bold">NOTE:</span> next iteration will remove duplicates and include better organising.</p>
  }
  @ui.AccordionRow(
  model.Accordion{
  Label: "First aid prep",
  Description: "These are the hazards that have been flagged as potentially requiring first aid." +
  " This should allow you to do a quick check of your first aid kit before you go",
  GroupId: "shortcuts",
  Icon: model.AccordionIconArrow,
  Border: true,
  Multi: true,
  },
  ) {
  <ul class="list-none list-outside c-list-tight">
    for _, hazard := range fixtures.HazardsFirstAid {
    <li class="flex flex-nowrap gap-1 items-center">
      <div class="flex-none w-fit">
        @ui.Checkbox(model.Checkbox{
        Label: "",
        Name: hazard.Id,
        })
      </div>
      <div class="grow">
        { hazard.Label }
      </div>
    </li>
    }
  </ul>
  }
  @ui.AccordionRow(
  model.Accordion{
  Label: "Packing, for organisers",
  GroupId: "shortcuts",
  Icon: model.AccordionIconArrow,
  Border: true,
  Multi: true,
  },
  ) {
  <p>This would be cool. I.e. a list of safety equipment based on the location and activities.</p>
  }
  @ui.AccordionRow(
  model.Accordion{
  Label: "Packing, for attendees",
  GroupId: "shortcuts",
  Icon: model.AccordionIconArrow,
  Border: true,
  Multi: true,
  },
  ) {
  <p>This would also be cool i.e. a list of required equipment attendees need to bring based on location and activities.
  </p>
  }
</div>
}