package web_location

import (
"fmt"

"scouts-risk/web/temp"
"scouts-risk/web/hazard"
"scouts-risk/internal/ui"
"scouts-risk/internal/icon"
"scouts-risk/internal/model"
)

var badgeColour = map[model.LocationType]string{
model.LocationTypeLocation: "primary",
model.LocationTypeArea: "neutral",
model.LocationTypeEquipment: "neutral",
}

templ Review(location model.Location) {
@ui.AccordionRow(
model.Accordion{
Label: location.Label,
Id: "location-review",
Description: "",
TitleBadges: []templ.Component{
ui.AccordionRowTitleBadge(ui.PlainText(string(location.LocType)), badgeColour[location.LocType]),
ui.AccordionRowTitleBadge(icon.XMark(templ.Attributes{}), "error"),
},
Icon: model.AccordionIconArrow,
Border: true,
},
) {
@locationHazards(location)
}
}

templ locationHazards(item model.Location) {
for _, h := range item.Hazards {
@ui.AccordionRow(
model.Accordion{
Label: h.Label,
Id: fmt.Sprintf("%s-hazard", "location"),
TitleBadges: []templ.Component{},
Icon: model.AccordionIconArrow,
Border: true,
},
) {
@web_hazard.Review(h)
}
}
<div class="w-full py-1">
  @web_temp.ButtonNew("hazard", item.Id)
</div>
}

templ New(locType model.LocationType) {
<form hx-post="/api/location/new" hx-trigger={fmt.Sprintf("click from:button#%s-new", locType)}
  hx-target="#event-locations" hx-swap="beforeend">
  <input type="hidden" name="type" value={ string(locType) } />
  <div class="w-full">
    @web_temp.SelectNew(string(locType))
  </div>
  <div class="w-full">
    @ui.Input(model.Input{
    Name: "label",
    Attrs: templ.Attributes{"type": "text", "placeholder": "Add name..."},
    })
  </div>
</form>
<div class="py-1 flex flex-nowrap gap-1 items-center">
  <div class="w-1/2">
    @ui.Button["primary"](ui.PlainText("Add"), templ.Attributes{"id": fmt.Sprintf("%s-new", locType)})
  </div>
  <div class="w-1/2">
    @ui.Button["default"](ui.PlainText("Cancel"), templ.Attributes{"x-on:click": "open = false"})
  </div>
</div>
}