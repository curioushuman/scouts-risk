package web_location

import (
"fmt"

"scouts-risk/web/temp"
"scouts-risk/web/hazard"
"scouts-risk/web/activity"
"scouts-risk/internal/fixtures"
"scouts-risk/internal/ui"
"scouts-risk/internal/icon"
"scouts-risk/internal/model"
)

templ Update() {
@Locations() {
@Register(
fixtures.Locations["macsPlace"],
[]model.Location{
fixtures.Locations["treeHouse"],
fixtures.Locations["bushy"],
},
[]model.Activity{
fixtures.Activities["cookingFire"],
},
)
}
}


templ Register(location model.Location, locations []model.Location, activities []model.Activity) {
@LocationDescription(location)
<div class="px-4">
  @ui.HeadingHelp(model.HeadingHelp{
  Label: "Register your risks",
  Level: 2,
  Help: "Add/review hazards for the areas and equipment for this location. Don't forget, locations can" +
  " have informal/implicit activities as well.",
  })
  @ui.HeadingHelp(model.HeadingHelp{
  Label: "Location",
  Level: 3,
  Help: "Add equipment/areas that will be used while at this location. Then add/review hazards and controls for each.",
  })
</div>
@ReviewLocations(locations)
<div class="px-4">
  @ui.HeadingHelp(model.HeadingHelp{
  Label: "Activities",
  Level: 3,
  Help: "You can pre-list activities that are common to this location e.g. swimming, if there is a pool.",
  })
</div>
@web_activity.ReviewActivities(activities)
}

templ ReviewLocations(locations []model.Location) {
<div class="join join-vertical w-full">
  @locationButtonsNew()
  <div id="event-locations">
    for _, location := range locations {
    @ReviewLocation(location)
    }
  </div>
</div>
}

templ ReviewLocation(location model.Location) {
@ui.AccordionRow(
model.Accordion{
Label: location.Label,
Id: "location-review",
Description: "",
TitleBadges: []templ.Component{
ui.AccordionRowTitleBadge(ui.PlainText(string(location.LocType)), badgeColour[location.LocType]),
ui.AccordionRowTitleBadge(icon.XMark(templ.Attributes{}), "error"),
},
Icon: model.AccordionIconArrow,
Border: true,
},
) {
@locationHazards(location)
}
}

templ locationButtonsNew() {
<div class="py-1 flex flex-nowrap gap-1 items-center">
  <div class="w-1/2">
    @locationButtonNew(model.LocationTypeArea)
  </div>
  <div class="w-1/2">
    @locationButtonNew(model.LocationTypeEquipment)
  </div>
</div>
}

templ locationButtonNew(locType model.LocationType) {
@ui.Modal(fmt.Sprintf("%sNew", locType), fmt.Sprintf("Add %s", locType)) {
@New(locType)
}
}

templ locationHazards(item model.Location) {
for _, h := range item.Hazards {
@ui.AccordionRow(
model.Accordion{
Label: h.Label,
Id: fmt.Sprintf("%s-hazard", "location"),
TitleBadges: []templ.Component{},
Icon: model.AccordionIconArrow,
Border: true,
},
) {
@web_hazard.Review(h)
}
}
<div class="w-full py-1">
  @web_temp.ButtonNew("hazard", item.Id)
</div>
}

var badgeColour = map[model.LocationType]string{
model.LocationTypeLocation: "primary",
model.LocationTypeArea: "neutral",
model.LocationTypeEquipment: "neutral",
}